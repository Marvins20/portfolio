/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 scene.gltf --transform 
Files: scene.gltf [48.03KB] > /home/marvins/Downloads/desk_low-poly/scene-transformed.glb [76.3KB] (-59%)
Author: Pedro Silva (https://sketchfab.com/pxdrosilva)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/desk-low-poly-ed62a64f51bf4d80a13e1344093c3909
Title: Desk Low-Poly
*/
"use client"
import React from 'react'
import { useGLTF } from '@react-three/drei'

export default function DeskModel(props) {
  const { nodes, materials } = useGLTF('/models/desk-transformed.glb')
  return (
    <group {...props} dispose={null} position={[0,-265,-200]} rotation={[0.25,4.71238898038 ,0]}>
      <mesh geometry={nodes.Desk_Desk_0.geometry} material={materials.Desk} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Boxes_Boxes_0.geometry} material={materials.Boxes} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Boxes_B_Tranaparency_0.geometry} material={materials.B_Tranaparency} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Paper_Paper_0.geometry} material={materials.Paper} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.PC_Speaker_PC_Speakers_0.geometry} material={materials.PC_Speakers} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.PC_Monitor_PC_Monitor_0.geometry} material={materials.PC_Monitor} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.PC_Monitor_PC_Screen_0.geometry} material={materials.PC_Screen} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.PC_Keyboard_PC_Keyboard_0.geometry} material={materials.material_0} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.PC_Keyboard_Keyboard_light_0.geometry} material={materials.Keyboard_light} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Keyboard_wire_WIre_0.geometry} material={materials.WIre} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.PC_Mouse_PC_Mouse_0.geometry} material={materials.PC_Mouse} scale={100} />
      <mesh geometry={nodes.Books_Books_0.geometry} material={materials.Books} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Notebook_Notebook_0.geometry} material={materials.Notebook} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Pen_Pen_0.geometry} material={materials.material_1} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Eraser_Eraser_0.geometry} material={materials.Eraser} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Dish_Cup_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Cell_phone_Cell_phone_0.geometry} material={materials.Cell_phone} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Cell_phone_Cell_screen_0.geometry} material={materials.Cell_screen} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Mousepad_Mousepad_0.geometry} material={materials.Mousepad} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
    </group>
  )
}

useGLTF.preload('/models/desk-transformed.glb')